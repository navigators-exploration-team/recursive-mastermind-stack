services:
  server-dev:
    profiles: ['dev']
    build:
      context: .
      dockerfile: server/docker/dockerfile.dev
    volumes:
      - ./server/src:/app/src
      - ./server/package.json:/app/package.json
      - ./server/nodemon.json:/app/nodemon.json
    ports:
      - '3000:3000'
    env_file:
      - server/.env
    depends_on:
      - redis
      - db    
    restart: unless-stopped
  server-prod:
    profiles: ['prod']
    build:
      context: .
      dockerfile: server/docker/dockerfile.prod
    volumes:
      - ./server/src:/app/src
    ports:
      - '3000:3000'
    env_file:
      - server/.env
    restart: unless-stopped
  vue-app-dev-client:
    profiles: ['dev']
    build:
      context: .
      dockerfile: ui/docker/dockerfile.dev
    volumes:
      - ./ui/src:/app/src
      - ./ui/index.ts:/app/index.ts
      - ./ui/package.json:/app/package.json
      - ./ui/public:/app/public
    ports:
      - 3001:3001
    tty: true
    stdin_open: true
    env_file:
      - ui/.env

  redis:
    profiles: ['dev','prod']
    image: redis:7.4.2
    volumes:
      - redis_data:/data
    command: [
      "redis-server",
      "--requirepass", "${REDIS_PASSWORD}",
      "--appendonly", "yes"
    ]
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    
  worker:
    profiles: ['prod', 'dev']
    build:
      context: .
      dockerfile: worker/docker/dockerfile.dev
    volumes:
      - ./worker/src:/app/src
    env_file:
      - worker/.env
    depends_on:
      - redis
      - db
    restart: always
  db:
    profiles: ["prod","dev"]
    image: mongo:8.0.6
    container_name: db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
  mongo-express:
    profiles: ["dev"]
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8500:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - redis
      - db

volumes:
  redis_data:
  mongodb_data:
